{"meta":{"title":"Code Jingles","subtitle":null,"description":null,"author":"Jiwon","url":"http://JiwonYeom.github.io"},"pages":[],"posts":[{"title":"Hexo Review","slug":"Hexo-Review","date":"2017-10-09T08:00:27.000Z","updated":"2017-10-10T12:30:00.792Z","comments":true,"path":"2017/10/09/Hexo-Review/","link":"","permalink":"http://JiwonYeom.github.io/2017/10/09/Hexo-Review/","excerpt":"","text":"Has been only two days since I’ve used Hexo, but I found several pros and cons that people might find interesting. Pro Super easy &amp; Fast deploymentAll you need to do is write up your markdown files, and type single command1$hexo deploy -g And that’ll deploy it to your Github Pages :) Customizable themesYou can get Hexo themes easily and customize it your way!It was my first time seeing .ejs files and .styl files, but hey, it was easy to customize it the way I want.For example, I switched the top banner image to text. I’m thinking of creating my own theme later too! Con HTML files are generated EVERY TIME you deployThis means the more markdown files you have, more files you’ll be re-deploying. So far I’m not sure how much this is going to affect the deployment process, but I’m just a bit hesitant over its performance when the files pile up. Can’t see which file was updated / added in Github repositorySince ALL files are re-deployed, you can’t see which one has changed from former commit. All resource files will be renewed, including the files that have not changed. If you lose local files (markdowns), you won’t be able to recocver them.You’ll have to diligently back-up your markdown files and customized files. I’m still looking for a solution for this, but as long as I know there is no way to recover your markdown files if you lose them. This means your site won’t be deployable again, because if you deploy your site with empty posts, your site will also be synch’ed to an empty website. I find this a huge bummer, and it concerns me a lot. I have my own TIL repository which I keep my bits of daily TIL’s, but also thinking of back-up mechanism for my whole hexo directory.(Please give me advice on this if you know how to overcome it in a sustainable way!)","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://JiwonYeom.github.io/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"http://JiwonYeom.github.io/tags/Blog/"}]},{"title":"Google Analytics on Hexo","slug":"google-analytics-on-hexo","date":"2017-10-09T00:39:41.000Z","updated":"2017-10-09T01:47:43.395Z","comments":true,"path":"2017/10/09/google-analytics-on-hexo/","link":"","permalink":"http://JiwonYeom.github.io/2017/10/09/google-analytics-on-hexo/","excerpt":"","text":"I’ve implemented Google Analytics to my blog :) I have always been interested in user(audience) analysis, and wanted to implement Google Analytics to my personal website. So I did! Here’s brief review of what I did. Create GA accountThis is super simple. Just visit Google Analytics website and sign up, following the directions. Get your tracking codeCMS’ like wordpress have Google Analytics plugins prepared, but custom pages don’t. So we need to implement GA code into our websites. Click Admin tab on your left sidebar, which is the second from bottom icon. Click Tracking Info-Tracking Code from the middle column. You’ll then see Global Site Tag code. Copy and paste this code to your &lt;HEAD&gt; part of website as first element! I’ve struggled a bit because I didn’t put it as my first element. I guess the order does matter due to other scripts and things, so please make sure it’s the first. You should soon see data collections happening :) You can modify this by separating Tracking ID to your theme’s _config.yml file, or implement multiple analytics in your website but I’ll just cover this much for now.","categories":[{"name":"Data Analysis","slug":"Data-Analysis","permalink":"http://JiwonYeom.github.io/categories/Data-Analysis/"}],"tags":[{"name":"Beginner","slug":"Beginner","permalink":"http://JiwonYeom.github.io/tags/Beginner/"},{"name":"Blog","slug":"Blog","permalink":"http://JiwonYeom.github.io/tags/Blog/"},{"name":"Google Analytics","slug":"Google-Analytics","permalink":"http://JiwonYeom.github.io/tags/Google-Analytics/"}]},{"title":"Github Pages With Hexo","slug":"GithubPages-Hexo","date":"2017-10-08T10:36:03.000Z","updated":"2017-10-09T01:47:38.639Z","comments":true,"path":"2017/10/08/GithubPages-Hexo/","link":"","permalink":"http://JiwonYeom.github.io/2017/10/08/GithubPages-Hexo/","excerpt":"","text":"After around 2 full months of keeping up TIL repository, I’ve FINALLY managed to move on to Github Pages. There were several thresholds for me before, which were I was not used to Markdowns. I had troubles understanding how Github Pages hosts my blog built on Hexo. I know these might sound strange, but yeah I guess I didn’t have enough knowledge on how things work on web in terms of build-deploy processes.So here goes som explanations for those of you who are starting off with Github Pages+Hexo Github PagesThis is super simple. Just create a repository with the name of [your-username].github.io. After that, just move on with Hexo set up. HexoThis is an awesome tool that automatically sets up your Github Pages to work like a blog with Markdown files as postings. Initial set up comes with simple commands:12345678910// install hexonpm install hexo-cli -g// init your blog. 'blog' here is just a name, so you can change it.hexo init blog// get into your blog directorycd blog// install bundlesnpm install// run your blog on node server, which will run on http://localhost:4000hexo server Now when you can confirm it running on localhost, continue with settings.You can see settings in _config.yml.You have to change some variables here. Here’s sample for what I customized: 123456title: Code Jinglessubtitle:description:author: Jiwonlanguage: entimezone: Asia/Seoul You also need to set Theme and Deploy, but I’ll get back to it later. Now go ahead and find some theme that you’d like to use from Hexo’s theme page.Usually, the themes will provide you sufficient directions to apply it.For me, I chose Hueman and customized it a bit.Mostly, it involves git clone command and changing theme in your blog/_config.yml file. 1theme: hueman After that, customize the theme as you like. For me, I even edited some part of style files and layout file so that I can use text instead of image for my logo. I chose one from google font (full of awesome fonts!).I added my part of customization as custom.styl file, and imported it into style.styl. First time using Styl and it was interesting to try new stuff. Check it out here. When you are done, most important part now - create a first post! The command:1hexo new [title] Please refert to official Docs for full explanation. This command will create new .md file in your blog/source/_posts directory. You just have to write things in that file. Most important part - how to make this markdown file into a webpage? These markdowns are not directly taken into your website - it will not look all pretty and nice in markdown format. You need to convert it into HTML file. But how?Hexo does it. Two important commands:12hexo generatehexo deploy First command will turn your added files and assets needed for your blog into static files. For example, your markdown file will be turned into html file so that it will look nice and organized for visitors of your blog.This includes files like css, js.. etc.The generated files will be saved in blog/public directory. Please refer here for further understanding in generate command. You can always check changes to your blog by hexo server command before actually generating the files. Finally, that you are done with static files, you need to push them to your web server - which is your github repository. You don’t do this with your usual git push kind of method. Hexo does this for you too. With hexo deploy, it will automatically push the changes into your repository. But you need to set up deploy methods first in your blog/_config.yml file.I’ll show you how to set it up with Github, but it supports other services too. Please see here. 12cd blognpm install hexo-deployer-git --save Then in your _.config.yml, 12345deploy: type: git repo: &lt;repository url&gt; branch: [branch] # This is usually 'master' unless you changed branch message: [message] # I excluded this option If you have set everything correctly, it should deploy your blog to Github Pages automatically and generate the blog.This may take few moments to actually be observable, so please be patient :) And that’s it!It’s simple but could be difficult for those who are not used to web deployment and markdowns. Hopefully this helps for those who’s struggling with Hexo.","categories":[{"name":"Uncategorized","slug":"Uncategorized","permalink":"http://JiwonYeom.github.io/categories/Uncategorized/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://JiwonYeom.github.io/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"http://JiwonYeom.github.io/tags/Blog/"}]},{"title":"TIL to blog","slug":"TIL-to-blog","date":"2017-10-08T09:24:20.000Z","updated":"2017-10-09T01:48:54.586Z","comments":true,"path":"2017/10/08/TIL-to-blog/","link":"","permalink":"http://JiwonYeom.github.io/2017/10/08/TIL-to-blog/","excerpt":"","text":"So I am moving away from TIL repository to a blog, where I can just store random thoughts and code snippets.I’ll still use Medium for a longer, polished articles but I thought Github Pages would be better for displaying my TIL contents. So far my TIL contents have been randomly stacked in the TIL repository, but I found this rather visually not appealing. I also found myself writing quite long texts when I explain some stuffs, so blog is probably a better space to do it.","categories":[{"name":"Uncategorized","slug":"Uncategorized","permalink":"http://JiwonYeom.github.io/categories/Uncategorized/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://JiwonYeom.github.io/tags/blog/"},{"name":"TIL","slug":"TIL","permalink":"http://JiwonYeom.github.io/tags/TIL/"}]},{"title":"Symfony Review-2","slug":"symfony-review-2","date":"2017-10-06T10:16:05.000Z","updated":"2017-10-09T01:48:43.856Z","comments":true,"path":"2017/10/06/symfony-review-2/","link":"","permalink":"http://JiwonYeom.github.io/2017/10/06/symfony-review-2/","excerpt":"","text":"DoctrineSymfony does not have core component that works with Databases. Instead, it uses third-party library called Doctrine.Doctrine allows building database schema through Entity Class, retrieving it, and more.Symfony commands through bin/console can connect to various functionalities of Doctrine. Trailing \\ ProblemSymfony routing will cause 401 error when there is a trailing slash in the url. To solve it, you should add additional controller for redirections as shown here. 123456789101112131415161718// src/AppBundle/Controller/RedirectingController.phpnamespace AppBundle\\Controller;use Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;use Symfony\\Component\\HttpFoundation\\Request;class RedirectingController extends Controller&#123; public function removeTrailingSlashAction(Request $request) &#123; $pathInfo = $request-&gt;getPathInfo(); $requestUri = $request-&gt;getRequestUri(); $url = str_replace($pathInfo, rtrim($pathInfo, ' /'), $requestUri); return $this-&gt;redirect($url, 301); &#125;&#125;","categories":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/tags/PHP/"},{"name":"Symfony","slug":"Symfony","permalink":"http://JiwonYeom.github.io/tags/Symfony/"},{"name":"Framework","slug":"Framework","permalink":"http://JiwonYeom.github.io/tags/Framework/"}]},{"title":"Symfony Review-1","slug":"symfony-review-1","date":"2017-10-03T10:16:02.000Z","updated":"2017-10-09T01:48:38.611Z","comments":true,"path":"2017/10/03/symfony-review-1/","link":"","permalink":"http://JiwonYeom.github.io/2017/10/03/symfony-review-1/","excerpt":"","text":"I have been trying out Symfony today, and while I was working on it, I faced some difficulties and issues.I decided to leave some progress review on this. Installing SymfonyThis is simple if you follow the official guide. But one thing to remember: symfony command might NOT work if you don’t turn off &amp; on your terminal. Mine didn’t. If your command doesn’t work, turn your terminal off &amp; on again. symfony new [projectName] Should be enough to create your new project. Do NOT forget to change your root in nginx.conf file (If you are doing this on a nginx web server). The consoleSymfony can be managed by its own console and its commands, such as running its server or checking status, etc. Useful commands12345//check routed url listphp bin/console debug:router//refresh cache php bin/console cache:clear --env=prod File Directory src-AppBundle contains Controller. Resources-views contains view files.Which are two main places where you might want to begin. Twig engineSymfony uses html twig engine for its view as long as I have seen. I skimmed through the configs, and it seems like different rendering engine can be chosen, but this is interesting for me. So far, PHP frameworks that I used had plain HTMLs as its view templates. RoutingRouting is quite different from that of CI or Drupal, which are frameworks that I am familiar with. It uses a sort of annotation, which looks like the following123/** * @Route(&quot;/happy/name&quot;) */ This defines url pattern. But I think the file name and controller / function names are correlated since I got many errors while trying to get this work, and it seemed like the file name and function names must be right.This might be a mistake, so I’ll try to update if it turns out differently. Unresolved Issues (trying to find out) I am having issues (or this might not be an issue) with cache. From the beginning, when I was trying to see if my page has changed after changing some parts in index.html.twig, it didn’t change.Newly added controller wasn’t recognized too, until I did this: php bin/console cache:clear –no-warmup –env=prod I’m not sure if this is something that I must do every time I do some changes. There might be some way, so I’ll keep on searching. DebuggingIt said debugging toolbar should show up, but I haven’t seen it yet :(I think I might have set up something wrong, and trying to figure this out.update!==&gt; I found this out. My website seems like it’s on a production mode instead of development mode. I accessed app_dev.php by explicitly using its url, and the bar showed up.I think this is because of my web server setting, which is not the built-in php server. I’ll have to check up a bit more. Dev &amp; ProdI think Symfony divides these two quite strictly. I’m still trying to find out the exact mechanism, but there are two files -app.php and app_dev.php. While I was setting up nginx.conf, it also separated these two environments, which is good. But I should take more in-depth look to see exact settings and usages. Memory issueWhile I was trying to install FOS\\rest-bundle, I encountered memory issue. Allocated memory exceeded, so I tried to increase the memory_limit parameter in php.ini file to 1G, but it didn’t work.I though there might be another issue, but today I tried it again by putting -1 as its value. As a result, the memory alert was gone but now I had allocation exception in Composer. This was solved after I entered few commands suggested here","categories":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/tags/PHP/"},{"name":"Symfony","slug":"Symfony","permalink":"http://JiwonYeom.github.io/tags/Symfony/"},{"name":"Framework","slug":"Framework","permalink":"http://JiwonYeom.github.io/tags/Framework/"}]},{"title":"Installing a Package","slug":"installing-package","date":"2017-09-30T03:39:41.000Z","updated":"2017-10-09T01:48:16.456Z","comments":true,"path":"2017/09/30/installing-package/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/30/installing-package/","excerpt":"","text":"Update existing software packages 1sudo yum update -y Add program repo 1sudo wget -O /etc/yum.repos.d/[program].repo [repo address] Import key file from the repository 1sudo rpm --import [key address] Install 1sudo yum install [program]","categories":[{"name":"Server","slug":"Server","permalink":"http://JiwonYeom.github.io/categories/Server/"}],"tags":[{"name":"Server","slug":"Server","permalink":"http://JiwonYeom.github.io/tags/Server/"}]},{"title":"Codeigniter","slug":"codeigniter-use-library","date":"2017-09-30T02:23:41.000Z","updated":"2017-10-09T01:46:41.131Z","comments":true,"path":"2017/09/30/codeigniter-use-library/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/30/codeigniter-use-library/","excerpt":"","text":"Recently I’ve been using Codeigniter, and here’s how to use or create CI library. How to use itCI default libraries are located in system/libraries, and in order to use it, you just need to initialize it and use it. 12//initialize$this-&gt;load-&gt;library(&apos;class-name&apos;); Different library has different way to use it, so you need to check the documentation for each library. How to create itYou can also create a library. According to CI documentation, we can do three things. Create new library. Extend native library. Replace native library.note* database class cannot be extended or replaced. Keep three rules Capitalize first letter for file names. Capitalize first letter of class name. Class name must match the file name. After you create your library class, you can use it like when you are using native library.But if you want to pass parameters when you initialize your class, you must make your constructor accept parameters. 1234567class Someclass &#123; public function __construct($params) &#123; // Do something with $params &#125;&#125; Extending or utilizing CI resources in your library will be discussed in another time.","categories":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/tags/PHP/"},{"name":"Codeigniter","slug":"Codeigniter","permalink":"http://JiwonYeom.github.io/tags/Codeigniter/"}]},{"title":"Jenkins","slug":"jenkins-intro","date":"2017-09-30T01:03:45.000Z","updated":"2017-10-09T01:48:21.670Z","comments":true,"path":"2017/09/30/jenkins-intro/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/30/jenkins-intro/","excerpt":"","text":"Keywords: Continuous Integration, Hudson Installed on a central build server to let developers know the changed source code and trigger a build / run tests Continuous Integration : a development practice that require developers to integrate code into shared repository at regular intervals. This is to prevent finding an issue AFTER problem has occurred. This means there must be frequent build cycle. Usually this means code commit-&gt;build.(reference) Tutorials followed here Core concepts Pipeline: Supportive plugins for continuous delivery pipeline (automated flow of your version control -&gt; users). Every change that is committed in source control goes through a complex process to be released. Provides set of tools for modeling delivery pipelines “as code”. )(Through Domain Specific Language syntax) Continuous delivery pipeline is treated as a part of the application. It’s versioned &amp; reviewed, just like other codes. This text file is called Jenkinsfile Jenkinsfile? Automatically create Pipelines for all Branches and Pull Requests. Code review/iteration on the Pipeline. Audit trail for Pipeline Single source of truth for Pipeline. Can be viewed &amp; edited by many members. Why do we need this? Because the core concept of Jenkins is Automation. It is to provide full support from simple CI to comprehensive CI. Pipeline Flow : refer to this document figure 1. Pipeline terms Step : Single task. Command for Jenkins. Node : Work that Pipeline performs. Nodes 1) schedules steps contained within the block to run by adding an item into the Jenkins queue. 2) Creates workspace which is a directory specific to that particular Pipeline. Stage : Step for defining subset of the entire Pipeline. Ex) “Build”, “Test”, “Deploy”…","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://JiwonYeom.github.io/categories/DevOps/"}],"tags":[{"name":"Jenkins","slug":"Jenkins","permalink":"http://JiwonYeom.github.io/tags/Jenkins/"}]},{"title":"Symfony on AWS Linux","slug":"preps-for-symfony-aws","date":"2017-09-22T09:23:41.000Z","updated":"2017-10-09T01:48:30.380Z","comments":true,"path":"2017/09/22/preps-for-symfony-aws/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/22/preps-for-symfony-aws/","excerpt":"","text":"This is a step by step write up for how to prepare your AWS Linux server environment for Symfony. Get your EC2 instance with AWS Linux. I set everything default so that I can enjoy Free Tier. I strongly suggest you to get EIP(Elastic IP) too, so your instance won’t change its IP every time you reboot it. Install NGINX, php, php-fpm, and mysql. Here’s shell script that I used. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950# Basic Settingssudo yum updatesudo yum install nginxsudo mkdir -p /tmp/php7cd /tmp/php7/sudo wget https://mirror.webtatic.com/yum/el6/latest.rpmsudo yum install latest.rpmsudo vi /etc/yum.repos.d/webtatic.reposudo yum clean all#webtatic repo &amp; php installationsudo yum install --enablerepo=webtatic php70wphp -v #php7.0sudo yum install php70w-opcache php70w-xml php70w-pdosudo yum install php70w-mysqlnd php70w-gd php70w-apcu php70w-pecl-apcu php70w-mbstring php70w-imapsudo vi /etc/php.ini #cgi.fix_pathinfo=0sudo yum install php70w-fpmsudo vi /etc/php-fpm.d/www.conf# check listen, listen.owner, listen.group, user, group# listen = /var/run/php-fpm/php-fpm.sock# listen.owner = ec2-user# listen.group = ec2-user# user = ec2-user# group = ec2-usersudo service php-fpm startsudo service php-fpm stataus #should success here#nginx - see nginx conf script that followssudo vi /etc/nginx/nginx.confsudo service nginx restartcd /usr/share/nginx/html/#phpinfo checksudo vi phpinfo.php #host/phpinfo.phpsudo service nginx reloadsudo vi /etc/php.ini # date.timezone = [your timezone]sudo service nginx reloadsudo service nginx restart# mysqlsudo yum install -y mysql56-serversudo service mysqld startsudo mysql_secure_installation# set restart when server goes off &amp; onsudo chkconfig nginx onsudo chkconfig php-fpm onsudo chkconfig mysqld onsudo chkconfig mysqld on your nginx.conf settings:12345678910111213141516171819202122232425262728293031323334353637383940414243# your directoryroot /var/www/symfony/web;location / &#123; try_files $uri /app.php$is_args$args;&#125;# DEV # This rule should only be placed on your development environment # In production, don&apos;t include this and don&apos;t deploy app_dev.php or config.php location ~ ^/(app_dev|config)\\.php(/|$) &#123; fastcgi_pass unix:/var/run/php5-fpm.sock; fastcgi_split_path_info ^(.+\\.php)(/.*)$; include fastcgi_params; # When you are using symlinks to link the document root to the # current version of your application, you should pass the real # application path instead of the path to the symlink to PHP # FPM. # Otherwise, PHP&apos;s OPcache may not properly detect changes to # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126 # for more information). fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name; fastcgi_param DOCUMENT_ROOT $realpath_root; &#125; # PROD location ~ ^/app\\.php(/|$) &#123; fastcgi_pass unix:/var/run/php5-fpm.sock; fastcgi_split_path_info ^(.+\\.php)(/.*)$; include fastcgi_params; # When you are using symlinks to link the document root to the # current version of your application, you should pass the real # application path instead of the path to the symlink to PHP # FPM. # Otherwise, PHP&apos;s OPcache may not properly detect changes to # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126 # for more information). fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name; fastcgi_param DOCUMENT_ROOT $realpath_root; # Prevents URIs that include the front controller. This will 404: # http://domain.tld/app.php/some-path # Remove the internal directive to allow URIs like this internal; &#125;","categories":[{"name":"Server","slug":"Server","permalink":"http://JiwonYeom.github.io/categories/Server/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/tags/PHP/"},{"name":"Server","slug":"Server","permalink":"http://JiwonYeom.github.io/tags/Server/"},{"name":"Symfony","slug":"Symfony","permalink":"http://JiwonYeom.github.io/tags/Symfony/"},{"name":"NGINX","slug":"NGINX","permalink":"http://JiwonYeom.github.io/tags/NGINX/"},{"name":"Amazon Linux","slug":"Amazon-Linux","permalink":"http://JiwonYeom.github.io/tags/Amazon-Linux/"}]},{"title":"DB Replication to RDS","slug":"how-to-replicate-rds","date":"2017-09-22T04:39:41.000Z","updated":"2017-10-09T01:47:54.187Z","comments":true,"path":"2017/09/22/how-to-replicate-rds/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/22/how-to-replicate-rds/","excerpt":"","text":"Please refer to this document for official guidelines. I will be discussing only tips I gained while I was doing this. You will have to set unique server id in your /etc/my.cnf file. Add the following part 123[mysqld]log-bin=mysql-binserver-id=1 In the official document, step 6 (creating user and granting permission) could be confusing if you are a complete newbie in server and all (which is me!!), and I made a mistake by creating and granting permission to a dedicated user for replication in AWS RDS. This might sound stupid, but I know some of the newcomers will be making same mistake as mine, so here goes. User that is going to be used in the replication process should be made from the MASTER server, not SLAVE server.This means the master server will recognize the user from that domain you assign. Which means: 12CREATE USER 'repl_user'@'mydomain.com' IDENTIFIED BY '&lt;password&gt;';GRANT REPLICATION CLIENT, REPLICATION SLAVE ON *.* TO 'repl_user'@'mydomain.com' IDENTIFIED BY '&lt;password&gt;'; You will have to run this In your master server. That ‘mydomain.com’ part is host of RDS server. In other words, the RDS hostname, or its IP address. I don’t know about others, but the term ‘mydoman’ can be confusing. I put literally my server’s domain in first place. Other parts are pretty straightforward, so you should be okay. In official document, step 8 can be ANOTHER confusing part. The mymasterserver.mydomain.com here, is MASTER SERVER‘s domain. Since both step 6~7 and 8 says mydomain.com, I felt like it was very confusing for someone who tries this out for first time and have no server background like me. Once it successes on replication process, you should check it by show slave status\\G; command.The message that says Slave running normally does NOT guarantee that it is actually running. If you see error messages in the status, you should stop the replication by CALL mysql.rds_stop_replication; and change settings(it could be at your master server OR your slave server), start it again by CALL mysql.rds_start_replication; If it’s running successfully, you should see no errors and instead see something like1234Exec_Master_Log_Pos: 75456Relay_Log_Space: 76280...Seconds_Behind_Master: 0 which is an indicator that your replication is running, showing gap with the master server. At your master server, you can also check if your DBs are connected well by commands like show master status\\G or show slave hosts\\G.","categories":[{"name":"AWS","slug":"AWS","permalink":"http://JiwonYeom.github.io/categories/AWS/"}],"tags":[{"name":"DB","slug":"DB","permalink":"http://JiwonYeom.github.io/tags/DB/"},{"name":"Replication","slug":"Replication","permalink":"http://JiwonYeom.github.io/tags/Replication/"},{"name":"RDS","slug":"RDS","permalink":"http://JiwonYeom.github.io/tags/RDS/"}]},{"title":"AWS (2)","slug":"AWS-2","date":"2017-09-22T01:04:41.000Z","updated":"2017-10-09T01:17:26.406Z","comments":true,"path":"2017/09/22/AWS-2/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/22/AWS-2/","excerpt":"","text":"Route53Provides Domain / DNS related services + health check if needed. Steps to switch name server with existing Domain Create Hosted Zone in Route53. Enter domain that you own. Confirm 2 records generated after Hosted Zone creation. (NS, SOA) Go visit your Domain provider. In settings, change the name server with data provided by Route53 NS record Check if it has changed well with some sort of DNS Lookup service Add A record, which is your Host (server). Enter your IP. Wait until DNS caching updates. If it doesn’t show up for too long (it WILL take time, but usually a day or two should be enough.) if your settings were right with DNS Lookup or flush your cache (PC, browser, etc).","categories":[{"name":"AWS","slug":"AWS","permalink":"http://JiwonYeom.github.io/categories/AWS/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://JiwonYeom.github.io/tags/AWS/"}]},{"title":"BEM Introduction-2","slug":"bem-2","date":"2017-09-16T10:00:02.000Z","updated":"2017-10-09T01:46:07.249Z","comments":true,"path":"2017/09/16/bem-2/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/16/bem-2/","excerpt":"","text":"1. File Structure Single block = single directory. Block and directory shares name. block’s implementation is divided into separate technology files (css &amp; js) block directory is root for subdirectories of elements &amp; modifiers (ex. button, input, text.. etc) Element directory names begin with double underscore(__) Names of modifier directories begin with single underscore. implementation of elements &amp; modifiers are divided into different technology files. 2. CSS Making HTML wrapper HTML wrapper? used for 1) Relatively positioning HTML elements 2) Position element within a section use mixes. Mixes allows combining behavior and styles of multiple entities. create additional block element no additional abstract wrapper. 12345&lt;!-- 'profile' block --&gt;&lt;section class=\"profile\"&gt; &lt;div class=\"organization profile__organization\"&gt;&lt;/div&gt; &lt;div class=\"photobox profile__photobox\"&gt;&lt;/div&gt;&lt;/div&gt; 123456.profile__organization &#123; padding-top: 20px;&#125;.profile__photobox &#123; padding-top: 10px;&#125; +Paddings/margins to top / to bottom is often defined since it is not affected by responsiveness to a great degree, but horizontal padding / margin should be rethought before use.","categories":[{"name":"HTML&CSS","slug":"HTML-CSS","permalink":"http://JiwonYeom.github.io/categories/HTML-CSS/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://JiwonYeom.github.io/tags/HTML/"},{"name":"CSS","slug":"CSS","permalink":"http://JiwonYeom.github.io/tags/CSS/"},{"name":"BEM","slug":"BEM","permalink":"http://JiwonYeom.github.io/tags/BEM/"}]},{"title":"BEM Introduction-1","slug":"bem-1","date":"2017-09-16T10:00:01.000Z","updated":"2017-10-09T01:46:12.306Z","comments":true,"path":"2017/09/16/bem-1/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/16/bem-1/","excerpt":"","text":"BEM - Key ConceptsReference to here divide UI into blocks easier interface development reusable code without copy &amp; pasting 1. Block Represented by CLASS attribute name describes its PURPOSE Component encapsulates behaviors, templates, styles, etc. Should NOT influence the environment. Do not set margin, padding, postion, etc. No CSS tag / ID selectors. Nested structure. Arbitrary placement : blocks should be able to move around the page without modifying CSS / JavaScript Reuse by creating instances 2. Element name describes its PURPOSE naming rule: block-name__element-name. NESTING : Even if they are nested, they are all part of a BLOCK, not an ELEMENT. (block-name_elment-name__element-name &lt;= not allowed). If this is needed (elements under element), use service block instead. MEMBERSHIP : element is ALWAYS a part of a block. Optional 3. Modifier Describes its APPEARANCE, STATE, and BEHAVIOR. Separated from block / element name by a single _. Cannot be used alone. Use it alongside block / element class Types: Boolean: when presence / absence of modifier is important &amp; value unimportant. Key-value: when modifier value is important. Defines appearance and behavior of a block / an element. optional Similar to HTML attr can change during runtime 4. BEM entity Blocks, elements, and modifiers 5. Mix An instance of different BEM entities on a single DOM node. combines behaviors &amp; styles of several entities without code duplication create semantically new interface component on the basis of existing entities.1234&lt;div class=\"header\"&gt; &lt;!-- mix of block 'search-form' and element 'header__search-form' --&gt; &lt;div class=\"search-form header__search-form\"&gt;&lt;/div&gt;&lt;/div&gt; 6. BEM tree DOM tree written in BEM entities","categories":[{"name":"HTML&CSS","slug":"HTML-CSS","permalink":"http://JiwonYeom.github.io/categories/HTML-CSS/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://JiwonYeom.github.io/tags/HTML/"},{"name":"CSS","slug":"CSS","permalink":"http://JiwonYeom.github.io/tags/CSS/"},{"name":"BEM","slug":"BEM","permalink":"http://JiwonYeom.github.io/tags/BEM/"}]},{"title":"네임서버를 Route53으로 변경하기","slug":"change-nameserver","date":"2017-09-14T01:03:41.000Z","updated":"2017-10-09T01:46:25.133Z","comments":true,"path":"2017/09/14/change-nameserver/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/14/change-nameserver/","excerpt":"","text":"route53에서 Hosted Zone을 생성한다. Domain Name에 기존 도메인명을 넣는다. 생성하면 자동으로 두개의 record가 생성된다. (NS, SOA) NS에서 볼 수 있는 밸류값들을 이용해서 도메인을 만든 곳으로 가서 네임서버를 Route53쪽으로 변경한다. 네임서버가 변경되었는지는 dns lookup 서비스 등을 이용해서 확인할 수 있다 === 여기까지가 도메인 연결 === A 레코드를 추가하여 호스트를 연결한다. 추가시에 Value에 IP 주소를 입력한다. DNS Lookup으로 올바른 IP 주소가 조회되면 설정은 완료. 캐싱이 갱신되어 사이트가 정상적으로 조회되는것을 기다리거나 확인하면 된다","categories":[{"name":"Network","slug":"Network","permalink":"http://JiwonYeom.github.io/categories/Network/"}],"tags":[{"name":"DNS","slug":"DNS","permalink":"http://JiwonYeom.github.io/tags/DNS/"}]},{"title":"Domain & DNS","slug":"Domain-DNS","date":"2017-09-13T09:46:01.000Z","updated":"2017-10-09T01:47:16.480Z","comments":true,"path":"2017/09/13/Domain-DNS/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/13/Domain-DNS/","excerpt":"","text":"For those of you who have absolutely NO IDEA about the website url - like I was (and still partially am) - This is a simple guide. Urls are made out of protocol part and resource name part. Domains are, as you could assume, unique. You should visit domain provider (there are tons out there), and purchase one after searching your wanted domain pattern. When you access an website, actually 2 things happen 1) your agent(PC, mobile, tablet… whatever) ask for certain domain, 2)DNS responds to you with matching IP address. This means, even though what you see in the address bar in your browser is familiar http://www.something.com, this is just something that YOU see, not what browser actually visits. When we visit website, its always towards its IP, not the letters you see (domains). (add explanation later) in short: the web addresses you see and the actual thing that runs the website are COMPLETELY detached. They are just mapped by DNS. What is DNS then? This is also called name server. As its name suggests, it stores your domain and corresponding IP. There are many, many name servers out there, and they are hierarchical. Some name servers are named Root Servers, and they handle massive network of name servers. By forming networks and hierarchy, your website address query will travel through the network until it gets back the right IP address. So it makes sense if ALL the name servers that have your domain and host(the server that carries website contents - simple version of seeing it) dies, you won’t be able to access that website with web address.Also, if the IP address changes and web address does not match with that IP address anymore in the registered DNS, it won’t be accessible anymore. Things are easier if you think of the name of website and the contents container of the website as two separate thing.","categories":[{"name":"Network","slug":"Network","permalink":"http://JiwonYeom.github.io/categories/Network/"}],"tags":[{"name":"DNS","slug":"DNS","permalink":"http://JiwonYeom.github.io/tags/DNS/"},{"name":"Domain","slug":"Domain","permalink":"http://JiwonYeom.github.io/tags/Domain/"},{"name":"Network","slug":"Network","permalink":"http://JiwonYeom.github.io/tags/Network/"},{"name":"Beginner","slug":"Beginner","permalink":"http://JiwonYeom.github.io/tags/Beginner/"}]},{"title":"AWS (1)","slug":"AWS-1","date":"2017-09-13T01:03:41.000Z","updated":"2017-10-09T01:17:18.935Z","comments":true,"path":"2017/09/13/AWS-1/","link":"","permalink":"http://JiwonYeom.github.io/2017/09/13/AWS-1/","excerpt":"","text":"Region / Availability Zone사용자의 인스턴스들을 어느 지역의 서버 풀을 이용할것인지 정의할 수 있다. 각 지역(region)에는 여러개의 가용성 존(AZ)가 있으며, VPC 등을 여러개의 AZ에 걸쳐 설정하는 등으로 fault-tolerant한 서비스 설계가 가능하다 EC2 EC2 instance: 말 그대로 서버 인스턴스. 생성시에 운영체제, 스펙 등을 조정해서 생성하고, AMI 라는 image 식으로 이미 본 떠져 있는 형태를 이용해서 생성할 수도 있다. Elastic Block Storage : 기본적으로 따라붙는 EC2 인스턴스의 저장소. 이것을 설정하지 않으면 인스턴스를 껐다 키면 모든 데이터가 날라간다. Elastic Load Balancer (ELB): 자동으로 여러대의 인스턴스에 부하를 분산해주는 인스턴스. 당연히도 인스턴스가 여러대여야 활용 가능하다. Auto-scaling: 각각의 EC2 인스턴스의 부하(load) 정도가 지정된 수준보다 높거나 낮을 때 알아서 인스턴스를 증설 / 감설하는 서비스. RDS AWS 상에서 제공되는 Database. MySQL, PostgreSQL, Oracle 등등 Aurora라는 자체 DB도 제공한다. Security Group 을 세팅할때는 MySQL용 규칙을 별도로 추가해 주어야 한다 S3 정적인 데이터를 저장하는 저장소. 필요에 따라 다른 plan을 선택해서 과금 정도를 최적화 할 수 있다. 설정에 따라 정적인 사이트를 호스팅 할 수도 있어서 EC2 없이 사이트를 운영할 수도 있다. CodeDeploy 자동으로 배포될 파일들의 변화를 감지, 재배포해주는 서비스.","categories":[{"name":"AWS","slug":"AWS","permalink":"http://JiwonYeom.github.io/categories/AWS/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://JiwonYeom.github.io/tags/AWS/"}]},{"title":"Data Structure Study in JS (Set)","slug":"ds-study-set","date":"2017-08-09T01:14:13.000Z","updated":"2017-10-09T01:47:24.681Z","comments":true,"path":"2017/08/09/ds-study-set/","link":"","permalink":"http://JiwonYeom.github.io/2017/08/09/ds-study-set/","excerpt":"","text":"Keywords unordered, unique elements, cannot be repeated, array with no repeated elements, no concept/order Set in ECMA6https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Set Set object allows storing unique values of any type. One can iterate through elements of a set in insertion order. 1new Set([iterable]); Each value must be unique. Value equality will be checked. NaN and undefined can also be stored in a Set. NaN is considered the same with NaN. (Even though NaN !== NaN) +0 and -0 Properties Set.length ( == 0) get Set[@@species] : constructor function that is used to create objects 1234class MySet extends Set&#123; // Overwrite Myset soecies to the parent Set constructor static get [Symbol.species]() &#123; return Set; &#125;&#125; Set.prototype : represents prototype for Set constructor. Allows addition to all Set objects. Properties 1.Set.prototype.constructor : Returns function that created an instance’s prototype. 2.Set.prototype.size : Returns number of values in Set object. Methods 1.Set.prototype.add(value) : appends a new element to the Set object and returns it. 2.Set.prototype.clear() : removes all elements from the Set object. 3.Set.prototype.delete(value) : Removes the element of value, returns what would have been returned by Set.prototype.has(value) previously. Set.prototype.has(value) will return false afterwards. 4.Set.prototype.entries() : Returns iterator object that contains an array of [value, value] for each element in the Set object, in insertion order. 5.Set.prototype.forEach(callbackFn[, thisArg]) : Calls callbackFn for each value in Set object, in insertion order. If an argument is provided, used as this value in each callback. 6.Set.prototype.values() : Returns new iterator object that contains values of each element in a set. 7.Set.prototype[@@iterator](): same with Set.prototype.values() InstancesAll Set instances inherit from Set.prototype.","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"},{"name":"Data Structure","slug":"Data-Structure","permalink":"http://JiwonYeom.github.io/tags/Data-Structure/"}]},{"title":"Date in IE","slug":"date-in-ie","date":"2017-08-05T01:12:20.000Z","updated":"2017-10-09T01:47:06.972Z","comments":true,"path":"2017/08/05/date-in-ie/","link":"","permalink":"http://JiwonYeom.github.io/2017/08/05/date-in-ie/","excerpt":"","text":"It came across to me today that the new Date() worked differently in chrome and other browsers, namely IE and Safari. This is what happened:12345var date = new Date('2017-08-01 00:00');// in chrome =&gt; successfully converted to date// in IE / safari =&gt; invalid date According to this page here, string given to date constructor must be RFC2822 or ISO8601 format.Chrome converted it for me, but These two browsers didn’t, so this is what I did to solve it: 12var input = '2017-08-01 00:00';var date = new Date(moment(input).format()); And this will make it work. I had moment.js library loaded for other uses anyways, so I decided to simply use it.","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"}]},{"title":"Data Structure Study in JS (Stack&Queue)","slug":"ds-study-stack&queue","date":"2017-08-01T01:14:03.000Z","updated":"2017-10-09T01:47:32.279Z","comments":true,"path":"2017/08/01/ds-study-stack&queue/","link":"","permalink":"http://JiwonYeom.github.io/2017/08/01/ds-study-stack&queue/","excerpt":"","text":"Keywords LIFO Stack class implementation12345678910111213141516171819202122232425262728293031323334353637383940414243444546function Stack()&#123; var items = []; // push - add item to the top of the stack this.push = function(element)&#123; items.push(element); &#125; // pop - remove item from the top of the stack this.pop = function()&#123; items.pop(); &#125; // returns the topmost element for information purpose this.peek = function()&#123; return items[items.length-1]; &#125; // check if the stack is empty this.isEmpty = function()&#123; return items.length == 0; &#125; // return the size of stack this.size = function()&#123; return items.length; &#125; this.clear = function()&#123; items = []; &#125; this.print = function()&#123; console.log(items.toString()); &#125;&#125;;// use the Stack classvar stack = new Stack();stack.push(1);stack.push(3);stack.pop();stack.push(5);stack.peek();stack.isEmpty();//... Using Stack to convert decimal to binary123456789101112131415161718function baseConverter(decNumber, base)&#123; var remStack = new Stack(), rem, baseString = '', digits = '0123456789ABCDEF'; while(decNumber &gt; 0)&#123; rem = Math.floor(decNumber % base); remStack.push(rem); decNumber = Math.floor(decNumber / base); &#125; while(!remStack.isEmpty())&#123; baseString += digits[remStack.pop()]; &#125; return baseString;&#125; DS in JavaScript (3) QUEUE Keywords FIFO Queue class implementation1234567891011121314151617181920212223242526function Queue()&#123; var items = []; // add item to the back this.enqueue = function(elements)&#123; items.push(elements); &#125; // remove item from the front. returns the item. this.dequeue = function()&#123; return items.shift(); &#125; // return the first item from the queue -- similar to peek this.front = function()&#123; return items[0]; &#125; this.isEmpty = function()&#123; return items.length == 0; &#125; this.size() = function()&#123; return items.length; &#125;&#125; Priority Queue elements added / removed based on certain type of priority 2 options of implementation queue them according to the priority remove them according to the priority 12345678910111213141516171819202122232425function PriorityQueue()&#123; var items = []; function QueueElement (element, priority)&#123; this.element = element; this.priority = priority; &#125; this.enqueue = function(element, priority)&#123; var queueElement = new QueueElement(element,priority); if(this.isEmpty())&#123; items.push(queueElement); &#125;else&#123; var added = false; for (var i=0; i &lt; items.length; i++)&#123; if(queueElement.priority &lt; items[i].priority)&#123; items.splice(i, 0, queueElement); added = true; break; &#125; &#125; if(!added)&#123; items.push(queueElement); &#125; &#125; &#125;&#125;","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"},{"name":"Data Structure","slug":"Data-Structure","permalink":"http://JiwonYeom.github.io/tags/Data-Structure/"}]},{"title":"Data Structure Study in JS (Array)","slug":"ds-study-arrays","date":"2017-07-22T01:14:03.000Z","updated":"2017-10-09T01:47:20.602Z","comments":true,"path":"2017/07/22/ds-study-arrays/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/22/ds-study-arrays/","excerpt":"","text":"Keywords simplest memory DS, same data type, modified objects Creating and Initializing1) use new keyword1var testArray = new Array(); 2) []12var testArray = []; //declarevar testArray2 = [&apos;test1&apos;, &apos;test2&apos;, &apos;test3&apos;] //initialize Adding and removing elements1) push(): add to the end 2) unshift(): add to the front// add code 3) pop(): remove from the back 4) shift(): remove from the front//manually code 5) splice(): remove in between / add in between1234// removearray.splice(1,2);// addarray.splice(2,0,1,2,3); &ast;note:push &amp; pop is an emulation of stack. shift &amp; unshift is an emulation of queue Two-dimensional and multi-dimensional arrays We might want to use matrix (Two-dimensional array) in some cases. JS does not support matrices. Instead, we use arrays of arrays. 2 x 21234567891011121314151617181920// everyday meal// 0 ~ 4 --&gt; mon ~ fridailyMeal[0] = [];dailyMeal[0][0] = &apos;milk and bread&apos;;dailyMeal[0][1] = &apos;김치찌개&apos;;dailyMeal[0][1] = &apos;fried chicken&apos;;dailyMeal[1] = [];dailyMeal[1][0] = &apos;yogurt&apos;;dailyMeal[1][1] = &apos;제육볶음&apos;;dailyMeal[1][2] = &apos;roasted fish&apos;;...// function to print this matrixfunction printMeal(dailyMeal)&#123; for(var i = 0 ; i &lt; dailyMeal.length &lt; i++) &#123; for(var j = 0 ; j &lt; dailyMeal[i].length &lt; j++) &#123; console.log(dailyMeal[i][j]); &#125; &#125;&#125; 3 x 312345678910111213141516// function to create 3x3 matrixvar matrix = [];for (var i = 0 ; i &lt; 3 ; i++)&#123; matrix[i] = []; for (var j = 0 ; j &lt; 3 ; j++)&#123; matrix[i][j] = []; for (var z = 0 ; z &lt; 3 ; z++)&#123; matrix[i][j][z] = i+j+z; &#125; &#125;&#125;console.log(matrix);// 0,1,2 1,2,3 2,3,4// 1,2,3 2,3,4 3,4,5// 2,3,4 3,4,5 4,5,6 Joining multiple arrays1) concat() : allows joining multiple arrays and objects into one aray. &ast;note : works regardless types 12345var test = &apos;test&apos;;var testArray1 = [1,3,5,7];var testArray2 = [2,4,6,8];testArray1.concat(test,testArray2);&gt;&gt; [1, 3, 5, 7, &quot;test&quot;, 2, 4, 6, 8] Iterator functions12345//sample functionvar isEight = function(x)&#123; console.log(x); return x == 8;&#125; 1) every() : iterates each element, passes it to a function, stops when result is false.1234var numberArray = [1,2,3,4,5,6,7,8,9,10];numberArray.some(isEight);&gt;&gt;1&gt;&gt;false 2) some() : iterates each element, passes it to a function, stops when result is true.123456numberArray.some(isEight);&gt;&gt;1&gt;&gt;2&gt;&gt;...&gt;&gt;8&gt;&gt;true 3) map() : Returns an array that stores result of every function run.12numberArray.map(isEight);&gt;&gt; [false, false, false, false, false, false, false, true, false, false]; 4) filter() : returns an array with elements of true value.12var lotsOfEight = [1,8,3,4,8,8,3,4,8];&gt;&gt; [8, 8, 8, 8] 5) reduce(function(prevValue, currentValue, currentIndex, arr), initialValue) : returns a result that has been ran continuously with given function through each element.&ast;note: prevValue == 전 회차에서 반환된 값.See here for more detail.1234numberArray.reduce(function(prevValue, currentValue, currentIndex, arr), initialValue) &#123; return prevValue + current;&#125;);&gt;&gt; 55; Searching and Sorting1) reverse() : literally reverses the order of elements. 2) sort() : sorts elements of an array. This sort is lexicographic, which means by string, not by numbers. If we want our sort() to sort numerically, we need to pass another function to the sort() function. This is called compareFunction. array.sort(compareFunction) To sort with ascending order:1234numberArray.sort(function(a,b)&#123; return a-b;&#125;);&gt;&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] To sort with descending order:1234numberArray.sort(function(a,b)&#123; return b-a;&#125;);&gt;&gt; [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] Custom sorting We can use compareFunction to compare any type of elements as we define.123456789101112var petAge = [ &#123;name: &apos;치즈&apos;, weight : 2&#125;, &#123;name: &apos;봉구&apos;, weight : 1.8&#125;, &#123;name: &apos;루루&apos;, weight : 2.2&#125;,];function compareWeight(a,b) &#123; return a.weight - b.weight;&#125;console.log(petAge.sort(compareWeight));&gt;&gt;봉구 - 치즈 - 루루 Sorting string sort() will sort strings according to ASCII value. But sometimes, you would want them to be ordered with different ordering rule. 1234// ignore casesfunction ignoreCase(a,b)&#123; a.toLowerCase() - b.toLowerCase;&#125; Searching 1) indexOf() : first match 2) lastIndexOf() : last match Outputting the array into a string1) toString() : convert array to string, with , separator. 2) join() : do the same thing with toString(), but with given separator.","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"},{"name":"Data Structure","slug":"Data-Structure","permalink":"http://JiwonYeom.github.io/tags/Data-Structure/"}]},{"title":"AngularJS(1.x) HTTP post method & PHP","slug":"angularJS-post-and-php","date":"2017-07-19T10:16:02.000Z","updated":"2017-10-09T01:45:32.768Z","comments":true,"path":"2017/07/19/angularJS-post-and-php/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/angularJS-post-and-php/","excerpt":"","text":"What happened? I was working on my company’s web application (CI3) and so far while I was using jQuery Ajax, I had no problem with CI method of getting POST inputs. I used the following code. 1$date = $this-&gt;input-&gt;post(&apos;date&apos;); This worked well in both GET and POST methods and there was no need for me to adjust anything extra. So I did the same thing with AngularJS HTTP methods. 123456789101112131415161718//js scriptvar company = $(&apos;.selectwrap.company a&apos;).text();var date = $(&apos;.selectwrap.date a&apos;).text();var postData = &#123; company : company, date : date&#125;;$http.post(&quot;url&quot;, postData).then( function(response) &#123; console.log(response); &#125;, function(error)&#123; console.log(error); &#125;);// php...$date = $this-&gt;input-&gt;post(&apos;date&apos;); And it turned out the post input was empty. I tried to go around it but I was without success, and after doing some search I found that AngularJS, unlike jQuery, sets Content-Type header into application/json instead of application/x-www-form-urlencoded, which is what jQuery uses. In order to read this value properly, PHP should read it from raw input. So I wrote this: 1234$postdata = file_get_contents(&quot;php://input&quot;);$postdata = json_decode($postdata);$date = $postdata-&gt;date;$company = $postdata-&gt;company; And it worked. Apparently the header setting for different library - or framework - matters!","categories":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/tags/PHP/"},{"name":"AngularJS","slug":"AngularJS","permalink":"http://JiwonYeom.github.io/tags/AngularJS/"}]},{"title":"CURL in PHP","slug":"curl_get_post","date":"2017-07-19T09:43:12.000Z","updated":"2017-10-09T01:46:59.211Z","comments":true,"path":"2017/07/19/curl_get_post/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/curl_get_post/","excerpt":"","text":"Basicscurl in PHP basically does the same thing as curl in different languages or environments, but php has its own way of using it. It is not too difficult though.Here are basic codes I used when I was working on GET and POST request. 12345$ch = curl_init();curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // sets return value of executed curl transfer as a string instead of direct outputcurl_exec($ch);curl_close($ch); curl_init() : initialize your curl transfer curl_setopt() : curl_setopt() sets options for curl transfer curl_exec(): execute your curl transfer curl_close() : close (finish) curl transfer GET1$request_url .= &apos;?&apos; . http_build_query($fields); in GET request, if you have parameters http_build_query() can help to build queries automatically. POST123curl_setopt($ch, CURLOPT_POST, TRUE); // set curl transfer type as postcurl_setopt($ch, CURLOPT_HTTPHEADER, $headers); // set headers as neededcurl_setopt($ch, CURLOPT_POSTFIELDS, $fields); // set parameters","categories":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/tags/PHP/"},{"name":"CURL","slug":"CURL","permalink":"http://JiwonYeom.github.io/tags/CURL/"}]},{"title":"NGINX and PHP Settings","slug":"nginx-and-php","date":"2017-07-19T06:23:41.000Z","updated":"2017-10-09T01:48:25.703Z","comments":true,"path":"2017/07/19/nginx-and-php/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/nginx-and-php/","excerpt":"","text":"NGINX by itself does not provide PHP support. In order to make it work smoothly with PHP, additional implementation, which is PHP-FPM. When first installed NGINX, begin with installing php and php-fpm. (CentOS-base) 1sudo yum install php php-mysql php-fpm One thing to note here is that, if you are to add external repository to install newer version of php like php-7, you should take note that you must use it carefully so that php version can be tracked and updated consistently. After that, you should set up some config files, which are nginx.conf, php-fpm.d/www.conf, and php.ini. As you fix these files, do not forget to check the nginx and php status by commands like sudo service nginx restart and sudo service nginx status. (The same for php-fpm).","categories":[{"name":"Server","slug":"Server","permalink":"http://JiwonYeom.github.io/categories/Server/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://JiwonYeom.github.io/tags/PHP/"},{"name":"Server","slug":"Server","permalink":"http://JiwonYeom.github.io/tags/Server/"},{"name":"NGINX","slug":"NGINX","permalink":"http://JiwonYeom.github.io/tags/NGINX/"}]},{"title":"How to use Class in JS (2)","slug":"how-to-use-class-js-2","date":"2017-07-19T01:14:15.000Z","updated":"2017-10-09T01:48:06.370Z","comments":true,"path":"2017/07/19/how-to-use-class-js-2/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/how-to-use-class-js-2/","excerpt":"","text":"Refence to this page. Credits go to Isaaks, the writer of that article. This is for my personal study. Boxing with Prototype &amp; static methodsBoxing: wrapping primitive non-object with a corresponding wrapper. Primitive data types in JS are not objects. 123456&quot;foo&quot;.constructor === String; //true&quot;foo&quot;.__proto__ === String.prototype; //true&quot;foo&quot; instanceof String; //falsetypeof &quot;foo&quot;; //truenew String(&quot;foo&quot;) instanceof String; //truetype new String(&quot;foo&quot;); //&quot;object&quot; When attempted to access a property on primitive value, it gets automatically boxed by its corresponding object. So, objects (new xxx) can have properties but primitives cannot. When a property is attempted to set on a primitive, that particular primitive gets boxed into an object. The property is set, but when same value primitive is read with that property, that is not the same instance anymore since it is boxed again from primitive. You can manually box &amp; unbox values by casting primitives to an Object and then invoking valueOf on wrapper object. 1234567// boxvar primitiveStr = &quot;foo&quot;;var objectStr = Object(primitiveStr); //강제형변환 - primitive --&gt; object// unboxvar objectNum = new Number(5);var primitiveNum = objectNum.valueOf(); //object --&gt; primitive","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"},{"name":"Class","slug":"Class","permalink":"http://JiwonYeom.github.io/tags/Class/"}]},{"title":"How to use Class in JS (1)","slug":"how-to-use-class-js-1","date":"2017-07-19T01:14:13.000Z","updated":"2017-10-09T01:48:02.292Z","comments":true,"path":"2017/07/19/how-to-use-class-js-1/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/how-to-use-class-js-1/","excerpt":"","text":"(This is my personal practice on this page. May use some similar codes.) Declare a class123456class Page &#123; constructor(words, lines)&#123; this.words = words; this.lines = lines; &#125;&#125; This code declares a class Page, with two inputs for its members. Important: Classes are NOT hoisted, oppose to methods. Class body and method definitions Strict Mode is used for class definitions and class expressions. Constructor can be used for creating and initializing instances. Prototype methods 123456789101112131415161718class Page &#123; constructor(words, lines)&#123; this.words = words; this.lines = lines; &#125; // let&apos;s pretend this is real lol get wordCount()&#123; return this.calcCount(); &#125; calcCount() &#123; return this.words * this.lines; &#125;&#125;const page = new Page(25, 20);console.log(page.wordCount); Static methodsThe word static defined static method. They are called without instantiating class and CANNOT be called through class instance. 123456789101112131415161718class Point &#123; constructor(x,y)&#123; this.x = x; this.y = y; &#125; static distance(a,b)&#123; const dx = a.x - b.x; const dy = a.y - b.y; return Math.sqrt(dx*dx + dy*dy); &#125;&#125;const p1 = new Point(5,5);const p2 = new Point(10,10);console.log(Point.distance(p1,p2));","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"},{"name":"Class","slug":"Class","permalink":"http://JiwonYeom.github.io/tags/Class/"}]},{"title":"Deep Copy in JS","slug":"deep-copy","date":"2017-07-19T01:13:03.000Z","updated":"2017-10-09T01:47:10.497Z","comments":true,"path":"2017/07/19/deep-copy/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/deep-copy/","excerpt":"","text":"When an object is put into another variable, it is copied by reference. This means if the original object changes, the referenced values will change too. 123456789101112131415var originalArr = [ &#123;first:&apos;John&apos;, last:&apos;Smith&apos;&#125;, &#123;first:&apos;Charles&apos;, last:&apos;Black&apos;&#125; ];var array1 = [];var array2 = [];// shallow copyarray1 = originalArr;array2 = originalArr;array1 = array1.splice(0,1);console.log(array1); // [&#123;first:&apos;Charles&apos;, last:&apos;Black&apos;&#125;]console.log(array2); // [&#123;first:&apos;Charles&apos;, last:&apos;Black&apos;&#125;] As shown in example above, if copied by reference, removing an element in one array will result in removal in another variable.So these values must be deeply copied, which means values must be copied by value not reference.There are several ways to do this, but I solved this with a simple solution (This is not the most efficient one. It only shows how to make a deeply copied array) 12345for(var i = 0 ; i &lt; originalArr.length ; i++)&#123; array1.push(originalArr[i]); array2.push(originalArr[i]);&#125; I did this and somehow it worked, but I’m not sure it this is right way to do it.Many people suggests usng the JSON method:1var clonedArray = JSON.parse(JSON.stringify(originalArray)); Here are more discussions about it.","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"}]},{"title":"Clousure in JS","slug":"closure","date":"2017-07-19T01:12:12.000Z","updated":"2017-10-09T01:46:33.599Z","comments":true,"path":"2017/07/19/closure/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/closure/","excerpt":"","text":"This is a brief explanation for closure in js. Closure is a function that returns a function. Basic Usage:12345678910var saveFn = function (val) &#123; return function () &#123; return val; &#125;;&#125;;var retriveFn = saveFn(100);console.log(retrieveFn());//100 An argument 100 has been passed to closure, saveFn. The function retrieveFn can now return values returned by saveFn, but it cannot change the entered value(100). We can use this as the following: 1234567891011var adder = function (a) &#123; return function (b) &#123; return a + b; &#125;;&#125;;var hi = adder(&apos;Hi &apos;);console.log(hi(&apos;Jamie&apos;)); //Hi Jamievar calcNum = adder(100);console.log(calcNum(50)); //150 same base function adder, used differently! :)","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://JiwonYeom.github.io/tags/JavaScript/"},{"name":"Closure","slug":"Closure","permalink":"http://JiwonYeom.github.io/tags/Closure/"}]},{"title":"Short Lesson on 204 Response","slug":"short-lesson-of-204","date":"2017-07-19T01:09:00.000Z","updated":"2017-10-09T01:48:35.057Z","comments":true,"path":"2017/07/19/short-lesson-of-204/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/short-lesson-of-204/","excerpt":"","text":"Today it happened to me that between REST API and client, response body came back empty even if it was set from REST API server. We spent good 1 hour trying to solve this, and it turned out it was because of 204 response status. 204 status means the request was accepted and processed well, but no content is returned. It is in the series of 2xx, which is basically an okay sign. Funny thing was, the message set from REST API server (which returned the 204 response) was well received when tested on Postman. But when it was attempted with curl, body was empty. In the end we changed 204 to 200 and solved the problem, but I came home and did some search to see why did this happened. I’m still not entirely sure, but it seems like setting content-type might be another solution. Anyways, it seems like the response status should never be taken lightly.","categories":[{"name":"HTTP","slug":"HTTP","permalink":"http://JiwonYeom.github.io/categories/HTTP/"}],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"http://JiwonYeom.github.io/tags/HTTP/"}]},{"title":"HTTP Basics","slug":"http-basics","date":"2017-07-19T01:08:00.000Z","updated":"2017-10-09T01:48:11.953Z","comments":true,"path":"2017/07/19/http-basics/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/http-basics/","excerpt":"","text":"HTTP basicsHTTP allows two types of messages to be transferred between client and server. Both HTTP Request and HTTP Response have common format, and contains HTTP Header and HTTP Body. HTTP Header Contains info about HTTP Body and Request/Response. In name-value pair. Types of HTTP Headers3 parts. General Header Request/Response Header Entity Header 1.General HeaderGeneral info - date, time of the message generated, etc. This header is common to both Request and Response. Cache-Control, Connection, Date, Pragma, Trailer, Transfer-Enco, Upgrade, Via, Warning 2.Request/Response HeadersPresents when you make a request to the server or server sends a response back to the client. Request Header : Accept, Accept-Charset, Accept-Encoding, Accept-Language, Authorization, Expect, From, Host, If-Match, If-Modified-Since, If-None-Match, If-Range, If-Unmodified-Since, Max-Forwards, Proxy-Authorization, Range, Referer, TE, User-Agent 3.Entity HeaderContains info about actual message or HTTP body being sent. Content length, language of content, encoding, expiration date… Allow, Content-Encoding, Content-Language, Content-Length, Content-Location, Content-MD5, Content-Range, Content-Type, Expires, Last-Modified, extension-header *Note: Since entity header is related with the body message, body formats, specifications, length and others must fit with what is defiend with entity header (I experienced a full hour jam because of this)","categories":[{"name":"HTTP","slug":"HTTP","permalink":"http://JiwonYeom.github.io/categories/HTTP/"}],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"http://JiwonYeom.github.io/tags/HTTP/"}]},{"title":"Git Basics","slug":"basic-commands","date":"2017-07-19T01:06:00.000Z","updated":"2017-10-09T01:45:48.871Z","comments":true,"path":"2017/07/19/basic-commands/","link":"","permalink":"http://JiwonYeom.github.io/2017/07/19/basic-commands/","excerpt":"","text":"There are several basic git commands we should know. git status : Shows current status of files in a git-registered directory. git add [file / file directory] : Stages files or files under the directory. Files declared in .gitignore file will be excluded.Note If you commit some files and that file becomes tracked, it cannot be excluded by .gitignore. You need to delete the file first and then commit first in order to exclude the file. git commit -m &quot;[message]&quot; : Commit with the message you want. git push [local dir] [remote] : Upload files to your remote git checkout -b &quot;[branch name]&quot; : create a branch, and shift to that branch. git log : shows log of your git activity. git reset HEAD [id] : you can reset your git status to the point of the id. git checkout [HASH] : lets you observe the files at that specific log time. git merge [branch] : merge the other branch into current branch. git merge --abort : aborts your merge when it has conflicted.","categories":[{"name":"Git","slug":"Git","permalink":"http://JiwonYeom.github.io/categories/Git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://JiwonYeom.github.io/tags/Git/"}]}]}